{"version":3,"sources":["views/PhonebookView/PhonebookView.module.css","redux/contacts/contacts-selector.js","redux/contacts/contacts-operation.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactItem/ContactItem.js","components/ContactList/ContactList.js","views/PhonebookView/PhonebookView.js","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactList/ContactItem/ContactItem.module.css"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","getLoading","isLoading","getError","error","getChangeListContacts","isChangeListContacts","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","fetchContacts","dispatch","a","fetchContactRequest","axios","get","data","fetchContactSuccess","fetchContactError","message","postContact","addContactRequest","post","then","addContactSuccess","catch","addContactError","deletContacts","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","ContactForm","useState","setName","number","setNumber","useDispatch","useSelector","contactsSelectors","handleNameChenge","e","target","value","className","s","form","onSubmit","preventDefault","newContact","some","el","toast","warn","theme","contactsOperation","success","text","input","type","onChange","pattern","title","required","Button","btn","Filter","sort","sortText","contactsAction","chengeFilter","ContactItem","contactName","contactNumber","contactBtn","onClick","deleteContact","ContactList","visibleContacts","contactList","map","PhonebookView","loading","_error","isLoggedIn","authSelectors","getIsLoggedIn","useEffect","Spinner","animation"],"mappings":"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","file":"static/js/3.77f936cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"PhonebookView\":\"PhonebookView_PhonebookView__KwcqX\",\"Spinner\":\"PhonebookView_Spinner__aIAQV\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getChangeListContacts = state =>\n  state.contacts.isChangeListContacts;\n\nexport const getVisibleContacts = createSelector(\n  [getFilter, getContacts],\n  (filter, contacts) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import axios from 'axios';\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-action';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactRequest());\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    fetchContactError(error.message);\n  }\n};\n\nexport const postContact = contact => dispatch => {\n  dispatch(addContactRequest());\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error.message)));\n};\n\nexport const deletContacts = id => dispatch => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error.message)));\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsOperation, contactsSelectors } from 'redux/contacts';\nimport { Button } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const isChangeListContacts = useSelector(\n    contactsSelectors.getChangeListContacts,\n  );\n\n  const handleNameChenge = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      name,\n      number,\n    };\n    const checkingContacts = el => el.name.toLowerCase() === name.toLowerCase();\n\n    if (contacts.some(checkingContacts)) {\n      toast.warn(`${name} is alreaby in contacts`, { theme: 'colored' });\n      return;\n    }\n    dispatch(contactsOperation.postContact(newContact));\n    if (isChangeListContacts) {\n      toast.success(`Contact ${name} added`, { theme: 'colored' });\n    }\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <p className={s.text}>Name</p>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleNameChenge}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n      <p className={s.text}>Number</p>\n      <input\n        className={s.input}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleNameChenge}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n      />\n      <Button className={s.btn} type=\"submit\">\n        Add contact\n      </Button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsAction, contactsSelectors } from '../../redux/contacts';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.sort}>\n      <span className={s.sortText}>Find contacts by name</span>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={e => dispatch(contactsAction.chengeFilter(e))}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { contactsOperation, contactsSelectors } from 'redux/contacts';\nimport { Button } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const isChangeListContacts = useSelector(\n    contactsSelectors.getChangeListContacts,\n  );\n\n  const deleteContact = id => {\n    dispatch(contactsOperation.deletContacts(id));\n\n    if (isChangeListContacts) {\n      toast.success(`Contact ${name} deleted`, { theme: 'colored' });\n    }\n  };\n\n  return (\n    <>\n      <p className={s.contactName}>{name}:</p>\n      <p className={s.contactNumber}>{number}</p>\n      <Button className={s.contactBtn} onClick={() => deleteContact(id)}>\n        delete\n      </Button>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import { useSelector } from 'react-redux';\nimport { contactsSelectors } from 'redux/contacts';\nimport s from './ContactList.module.css';\nimport ContactItem from './ContactItem';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(contactsSelectors.getVisibleContacts);\n\n  return (\n    <ul className={s.contactList}>\n      {visibleContacts?.map(({ id, name, number }) => (\n        <li key={id} className={s.contact}>\n          <ContactItem id={id} name={name} number={number} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { contactsSelectors, contactsOperation } from 'redux/contacts';\nimport { authSelectors } from 'redux/auth';\nimport { Spinner } from 'react-bootstrap';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport s from './PhonebookView.module.css';\nimport { toast } from 'react-toastify';\n\nconst PhonebookView = () => {\n  const loading = useSelector(contactsSelectors.getLoading);\n  const _error = useSelector(contactsSelectors.getError);\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      dispatch(contactsOperation.fetchContacts());\n    }\n  }, [dispatch, isLoggedIn]);\n\n  return (\n    <div className={s.PhonebookView}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {loading && <Spinner className={s.Spinner} animation=\"border\" />}\n      {!loading && <ContactList />}\n      {_error && toast.error(_error, { theme: 'colored' })}\n    </div>\n  );\n};\n\nexport default PhonebookView;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2mGJf\",\"text\":\"ContactForm_text__3cWNK\",\"input\":\"ContactForm_input__1QVGn\",\"btn\":\"ContactForm_btn__1kNlg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sort\":\"Filter_sort__3jN0K\",\"sortText\":\"Filter_sortText__2jMkR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1FbUO\",\"contact\":\"ContactList_contact__fmnke\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactName\":\"ContactItem_contactName__3ekQD\",\"contactNumber\":\"ContactItem_contactNumber__ldckE\",\"contactBtn\":\"ContactItem_contactBtn__xBenN\"};"],"sourceRoot":""}